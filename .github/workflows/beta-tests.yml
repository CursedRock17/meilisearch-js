# Testing the code base against a specific Meilisearch feature
name: Beta tests

# Will only run for PRs and pushes to *-beta
on:
  push:
    branches: ['!bump-meilisearch-v*.*.*-beta', '**-beta']
  pull_request:
    branches: ['!bump-meilisearch-v*.*.*-beta', '**-beta']

jobs:
  grep-docker-version:
    runs-on: ubuntu-latest
    outputs:
      docker-version: ${{ steps.grep-step.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - name: Grep docker beta version of Meilisearch
        id: grep-step
        run: |
          MEILISEARCH_IMAGE=$(sh .github/scripts/beta-docker-version.sh)
          echo $MEILISEARCH_IMAGE
          echo ::set-output name=version::$MEILISEARCH_IMAGE
  integration_tests:
    runs-on: ubuntu-latest
    needs: ['grep-docker-version']
    strategy:
      matrix:
        node: ['12', '14', '16']
    name: integration-tests (Node.js ${{ matrix.node }})
    steps:
      - uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ./node_modules
          key: ${{ hashFiles('yarn.lock') }}
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: Meilisearch (${{ needs.grep-docker-version.outputs.docker-version }}) setup with Docker
        run: docker run -d -p 7700:7700 getmeili/meilisearch:${{ needs.grep-docker-version.outputs.docker-version }} meilisearch --master-key=masterKey --no-analytics
      - name: Install dependencies
        run: yarn --dev
      - name: Run tests
        run: yarn test
      - name: Build project
        run: yarn build
      - name: Run ESM env
        run: yarn test:env:esm
      - name: Run Node.js env
        run: yarn test:env:nodejs
      - name: Run node typescript env
        run: yarn test:env:node-ts
      - name: Run Browser env
        run: yarn test:env:browser
